# -*- coding: utf-8 -*-
"""disease prediction.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1KRXBM1_UsA6TtkAJtht7taydJ0lZg6R5
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import sklearn
from sklearn.preprocessing import StandardScaler
from sklearn.cluster import KMeans
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score

heart_data = pd.read_csv('/content/heart.csv')

heart_data.head()

heart_data.tail()

heart_data.shape

heart_data.info()

heart_data.isnull().sum()

heart_data.describe()

heart_data['output'].value_counts()

"""1 --> Defective heart
0 --> Healthy heart
"""

x = heart_data.drop(columns='output',axis = 1)
y = heart_data['output']

print(x)

print(y)

from IPython.testing import test
x_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.2,stratify=y,random_state=2)

print(x.shape,x_train.shape,x_test.shape)

"""Logistic Regression"""

model = LogisticRegression()

model.fit(x_train,y_train)

x_train_prediction = model.predict(x_train)
training_data_accuracy = accuracy_score(x_train_prediction,y_train)

print('Accuracy on Training data:',training_data_accuracy)

x_test_prediction = model.predict(x_test)
test_data_accuracy = accuracy_score(x_test_prediction,y_test)

print('Accuracy on Test data:',test_data_accuracy)

input_data=(41,0,1,130,204,0,172,0,1,4,2,0,2)

input_data_as_numpy_array = np.asarray(input_data)
input_data_reshaped=input_data_as_numpy_array.reshape(1,-1)
prediction = model.predict(input_data_reshaped)
print(prediction)

if (prediction[0]==0):
  print('Person doesnot have heart disease')
else:
  print('Person has a heart disease')

"""Kmeans clustering"""

X=heart_data[["age","chol"]]
X

sns.countplot(x='output',data=heart_data)

sns.heatmap(heart_data.isnull(),yticklabels=False)

